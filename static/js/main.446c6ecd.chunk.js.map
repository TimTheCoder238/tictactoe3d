{"version":3,"sources":["components/container/board/squarre/Squarre.js","components/container/select/Select.js","components/container/board/Board.js","components/container/travel/Travel.js","components/container/Container.js","checkpossibilities.js","checkwinner.js","App.js","index.js"],"names":["Squarre","props","btnClass","lastPos","length","size","is3d","map","lastpos","index","isNotDraw","onClick","e","handleChange","className","value","Select","useState","nameOfClass1","setnameOfClass1","nameOfClass2","setnameOfClass2","nameOfClass3","setnameOfClass3","nameOfClass4","setnameOfClass4","setupdateSize","setState","prev","Board","element1","element2","element3","element4","React","useEffect","console","log","state","isFinished1","isNotDraw1","isX1","isFinished2","isNotDraw2","isX2","isFinished3","isNotDraw3","isX3","treeD","updateSize","nottreeD","istreeD","boardCopy1","squarre","key","lastPosition1","boardCopy4","boards","indexi","indexj","boardCopy2","lastPosition2","boardCopy3","lastPosition3","Travel","handleClick","i","history1","id","document","getElementById","history2","history3","jumpTo","arr","Container","boards1","boards2","boards3","checkpossibilities","boardArray","blockStart","blockEnd","lastPosition","test","lignes","colonnes","diags","j","push","testLignes","testColonnes","increment","testDiags","checkWinner","testX","testO","App","board","Array","fill","boards4","isX4","isFinished4","stepNumber1","stepNumber2","stepNumber3","stepNumber4","lastPosition4","isNotDraw4","boardsCopy","currentFBoard","possibilities","slice","currentFBoardCopy","currentCount","concat","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.446c6ecd.chunk.js","sourcesContent":["import React from 'react'\r\nimport './css/squarre.style.min.css'\r\n\r\nexport default function Squarre(props) {\r\n\tlet btnClass = 'squarre'\r\n\r\n\t// if (props.isNotDraw) {\r\n\t\tif (props.lastPos.length === props.size && !props.is3d) {\r\n\t\t\tprops.lastPos.map((lastpos) => {\r\n\t\t\t\tif (props.index === lastpos) {\r\n\t\t\t\t\tbtnClass = 'victory'\r\n\t\t\t\t}\r\n\t\t\t\treturn btnClass\r\n\t\t\t})\r\n\t\t}\r\n\t\telse {\r\n\t\t\tbtnClass = 'squarre'\r\n\t\t}\r\n\r\n\t\tif(!props.isNotDraw) {\r\n\t\t\tbtnClass = 'squarre squarre-draw'\r\n\t\t}\r\n\t\r\n\r\n\treturn (\r\n\t\t<button\r\n\t\t\tonClick={(e) => props.handleChange(props.index)}\r\n\t\t\tindex={props.index}\r\n\t\t\tclassName={btnClass}\r\n\t\t>\r\n\t\t\t{props.value}\r\n\t\t</button>\r\n\t)\r\n}\r\n","import React, { useState } from 'react'\r\nimport './css/select.style.min.css'\r\nexport default function Select(props) {\r\n\tconst [nameOfClass1, setnameOfClass1] = useState('select-button-s')\r\n\tconst [nameOfClass2, setnameOfClass2] = useState('select-button')\r\n\tconst [nameOfClass3, setnameOfClass3] = useState('select-button')\r\n\tconst [nameOfClass4, setnameOfClass4] = useState('select-button')\r\n\r\n\tconst handleButton1 = () => {\r\n\t\tsetnameOfClass4('select-button')\r\n\t\tsetnameOfClass1('select-button-s')\r\n\t\tsetnameOfClass2('select-button')\r\n\t\tsetnameOfClass3('select-button')\r\n\t\tprops.setupdateSize(3)\r\n\t\tprops.setState((prev) => ({\r\n\t\t\t...prev,\r\n\t\t\tis3d: false\r\n\t\t}))\r\n\t}\r\n\r\n\tconst handleButton2 = () => {\r\n\t\tsetnameOfClass4('select-button')\r\n\t\tsetnameOfClass2('select-button-s')\r\n\t\tsetnameOfClass1('select-button')\r\n\t\tsetnameOfClass3('select-button')\r\n\t\tprops.setupdateSize(4)\r\n\t}\r\n\r\n\tconst handleButton3 = () => {\r\n\t\tsetnameOfClass4('select-button')\r\n\t\tsetnameOfClass3('select-button-s')\r\n\t\tsetnameOfClass2('select-button')\r\n\t\tsetnameOfClass1('select-button')\r\n\t\tprops.setupdateSize(5)\r\n\t}\r\n\r\n\tconst handleButton4 = () => {\r\n\t\tsetnameOfClass4('select-button-s')\r\n\t\tsetnameOfClass3('select-button')\r\n\t\tsetnameOfClass2('select-button')\r\n\t\tsetnameOfClass1('select-button')\r\n\t\tprops.setupdateSize(3)\r\n\t\tprops.setState((prev) => ({\r\n\t\t\t...prev,\r\n\t\t\tis3d: true\r\n\t\t}))\r\n\t}\r\n\t// let treeD = props.updateSize === 3 && props.is3d\r\n\treturn (\r\n\t\t<div className='select'>\r\n\t\t\t<button className={nameOfClass1} onClick={handleButton1}>\r\n\t\t\t\t3 in a row\r\n\t\t\t</button>\r\n\r\n\t\t\t<button className={nameOfClass4} onClick={handleButton4}>\r\n\t\t\t\t3 in a row 3D\r\n\t\t\t</button>\r\n\r\n\t\t\t<button className={nameOfClass2} onClick={handleButton2}>\r\n\t\t\t\t4 in a row\r\n\t\t\t</button>\r\n\r\n\t\t\t<button className={nameOfClass3} onClick={handleButton3}>\r\n\t\t\t\t5 in a row\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport Squarre from './squarre/Squarre'\r\nimport Select from './../select/Select'\r\nimport './css/board.style.min.css'\r\n\r\nexport default function Board(props) {\r\n\tlet element1 = <p></p>\r\n\tlet element2 = <p></p>\r\n\tlet element3 = <p></p>\r\n\tlet element4 = <p>3D not working yet</p>\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconsole.log('Board Mounted')\r\n\t\t// console.log(props.state.isNotDraw1)\r\n\t\t// console.log(props.state.isNotDraw2)\r\n\t\t// console.log(props.state.isNotDraw3)\r\n\t})\r\n\t//3X3\r\n\t// Definit une classe name pour le button\r\n\tif (props.state.isFinished1 && props.state.isNotDraw1) {\r\n\t\telement1 = (\r\n\t\t\t<p className='winner title'>\r\n\t\t\t\tWinner: {props.state.isX1 ? 'O' : 'X'}\r\n\t\t\t</p>\r\n\t\t)\r\n\t\t//Update button classname en cas de victoire\r\n\t\t// props.state.lastPosition\r\n\t} else if (!props.state.isNotDraw1) {\r\n\t\telement1 = <p className='draw title'>Draw</p>\r\n\t} else if (!props.state.isFinished1 && props.state.isNotDraw1) {\r\n\t\telement1 = (\r\n\t\t\t<p className='title'>\r\n\t\t\t\tCurrent Player:{' '}\r\n\t\t\t\t<span className={props.state.isX1 ? 'xplay' : 'oplay'}>\r\n\t\t\t\t\t{props.state.isX1 ? 'X' : 'O'}\r\n\t\t\t\t</span>\r\n\t\t\t</p>\r\n\t\t)\r\n\t}\r\n\r\n\t//4X4\r\n\t// Definit une classe name pour le button\r\n\tif (props.state.isFinished2 && props.state.isNotDraw2) {\r\n\t\telement2 = (\r\n\t\t\t<p className='winner title'>\r\n\t\t\t\tWinner: {props.state.isX2 ? 'O' : 'X'}\r\n\t\t\t</p>\r\n\t\t)\r\n\t\t//Update button classname en cas de victoire\r\n\t\t// props.state.lastPosition\r\n\t} else if (!props.state.isNotDraw2) {\r\n\t\telement2 = <p className='draw title'>Draw</p>\r\n\t} else if (!props.state.isFinished2 && props.state.isNotDraw2) {\r\n\t\telement2 = (\r\n\t\t\t<p className='title'>\r\n\t\t\t\tCurrent Player:{' '}\r\n\t\t\t\t<span className={props.state.isX2 ? 'xplay' : 'oplay'}>\r\n\t\t\t\t\t{props.state.isX2 ? 'X' : 'O'}\r\n\t\t\t\t</span>\r\n\t\t\t</p>\r\n\t\t)\r\n\t}\r\n\r\n\t//5X5\r\n\t// Definit une classe name pour le button\r\n\tif (props.state.isFinished3 && props.state.isNotDraw3) {\r\n\t\telement3 = (\r\n\t\t\t<p className='winner title'>\r\n\t\t\t\tWinner: {props.state.isX3 ? 'O' : 'X'}\r\n\t\t\t</p>\r\n\t\t)\r\n\t\t//Update button classname en cas de victoire\r\n\t\t// props.state.lastPosition\r\n\t} else if (!props.state.isNotDraw3) {\r\n\t\telement3 = <p className='draw title'>Draw</p>\r\n\t} else if (!props.state.isFinished3 && props.state.isNotDraw3) {\r\n\t\telement3 = (\r\n\t\t\t<p className='title'>\r\n\t\t\t\tCurrent Player:{' '}\r\n\t\t\t\t<span className={props.state.isX3 ? 'xplay' : 'oplay'}>\r\n\t\t\t\t\t{props.state.isX3 ? 'X' : 'O'}\r\n\t\t\t\t</span>\r\n\t\t\t</p>\r\n\t\t)\r\n\t}\r\n\t//Check for 3d mode\r\n\tlet treeD = props.updateSize === 3 && props.state.is3d\r\n\tlet nottreeD = props.updateSize === 3 && !props.state.is3d\r\n\r\n\treturn (\r\n\t\t<div className='board'>\r\n\t\t\t<h1 className='board-title'>Tic Tac Toe</h1>\r\n\t\t\t<p className='board-message'>Super sizer</p>\r\n\t\t\t<div>\r\n\t\t\t\t<Select\r\n\t\t\t\t\tvalue={props.size}\r\n\t\t\t\t\tupdateSize={props.updateSize}\r\n\t\t\t\t\tsetupdateSize={props.setupdateSize}\r\n\t\t\t\t\tistreeD={props.state.is3d}\r\n\t\t\t\t\tsetState={props.setState}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* board 3X3 */}\r\n\t\t\t{nottreeD && (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className='board-element'>{element1}</div>\r\n\t\t\t\t\t<div className='board-body-3'>\r\n\t\t\t\t\t\t{props.state.boardCopy1.map((squarre, index) => (\r\n\t\t\t\t\t\t\t<Squarre\r\n\t\t\t\t\t\t\t\tkey={index + 'bc1'}\r\n\t\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\t\thandleChange={props.handleChange}\r\n\t\t\t\t\t\t\t\tvalue={squarre}\r\n\t\t\t\t\t\t\t\tlastPos={props.state.lastPosition1}\r\n\t\t\t\t\t\t\t\tsize={props.updateSize}\r\n\t\t\t\t\t\t\t\tisNotDraw={props.state.isNotDraw1}\r\n\t\t\t\t\t\t\t\tis3d={props.state.is3d}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t{/* board 3X3 3D */}\r\n\t\t\t{treeD && (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className='board-element'>{element4}</div>\r\n\t\t\t\t\t<div className='board-body-6'>\r\n\t\t\t\t\t\t{props.state.boardCopy4.map((boards, indexi) => (\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tkey={indexi + 'bc4board'}\r\n\t\t\t\t\t\t\t\tclassName='board-body-6-board'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{boards.map((squarre, indexj) => (\r\n\t\t\t\t\t\t\t\t\t<Squarre\r\n\t\t\t\t\t\t\t\t\t\tkey={indexi + 'bc4' + indexj}\r\n\t\t\t\t\t\t\t\t\t\tindex={indexj}\r\n\t\t\t\t\t\t\t\t\t\thandleChange={props.handleChange}\r\n\t\t\t\t\t\t\t\t\t\tvalue={squarre}\r\n\t\t\t\t\t\t\t\t\t\tlastPos={props.state.lastPosition1}\r\n\t\t\t\t\t\t\t\t\t\tsize={props.updateSize}\r\n\t\t\t\t\t\t\t\t\t\tisNotDraw={props.state.isNotDraw1}\r\n\t\t\t\t\t\t\t\t\t\tis3d={props.state.is3d}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t{/* board 4X4 */}\r\n\t\t\t{props.updateSize === 4 && (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className='board-element'>{element2}</div>\r\n\t\t\t\t\t<div className='board-body-4'>\r\n\t\t\t\t\t\t{props.state.boardCopy2.map((squarre, index) => (\r\n\t\t\t\t\t\t\t<Squarre\r\n\t\t\t\t\t\t\t\tkey={index + 'bc2'}\r\n\t\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\t\thandleChange={props.handleChange}\r\n\t\t\t\t\t\t\t\tvalue={squarre}\r\n\t\t\t\t\t\t\t\tlastPos={props.state.lastPosition2}\r\n\t\t\t\t\t\t\t\tsize={props.updateSize}\r\n\t\t\t\t\t\t\t\tisNotDraw={props.state.isNotDraw2}\r\n\t\t\t\t\t\t\t\tis3d={props.state.is3d}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t{/* board 5X5 */}\r\n\t\t\t{props.updateSize === 5 && (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className='board-element'>{element3}</div>\r\n\t\t\t\t\t<div className='board-body-5'>\r\n\t\t\t\t\t\t{props.state.boardCopy3.map((squarre, index) => (\r\n\t\t\t\t\t\t\t<Squarre\r\n\t\t\t\t\t\t\t\tkey={index + 'bc3'}\r\n\t\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\t\thandleChange={props.handleChange}\r\n\t\t\t\t\t\t\t\tvalue={squarre}\r\n\t\t\t\t\t\t\t\tlastPos={props.state.lastPosition3}\r\n\t\t\t\t\t\t\t\tsize={props.updateSize}\r\n\t\t\t\t\t\t\t\tisNotDraw={props.state.isNotDraw3}\r\n\t\t\t\t\t\t\t\tis3d={props.state.is3d}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport './css/travel.style.min.css'\r\n\r\nexport default function Travel(props) {\r\n\r\n\tconst handleClick = (index) => {\r\n\t\t//Récupère l'index\r\n\t\t//En fonction nde l'index et du tableau 3x3 ou 4x4\r\n\t\t//Récupère l'id\r\n\t\t// let id = index+'3x3'+props.updateSize\r\n\t\t// console.log(document.getElementById(id))\r\n\t\tswitch (props.updateSize) {\r\n\t\t\tcase 3:\r\n\t\t\t\tfor (let i = 0; i < props.history1.length-1; i++) {\r\n\t\t\t\t\tlet id = i+'3x3'+props.updateSize\r\n\t\t\t\t\tif(i === index){\r\n\t\t\t\t\t\tdocument.getElementById(id).className = 'travel-li-s'\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdocument.getElementById(id).className = 'travel-li'\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak\r\n\t\t\tcase 4:\r\n\t\t\t\tfor (let i = 0; i < props.history2.length-1; i++) {\r\n\t\t\t\t\tlet id = i+'4x4'+props.updateSize\r\n\t\t\t\t\tif(i === index){\r\n\t\t\t\t\t\tdocument.getElementById(id).className = 'travel-li-s'\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdocument.getElementById(id).className = 'travel-li'\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak\r\n\t\t\tcase 5:\r\n\t\t\t\tfor (let i = 0; i < props.history3.length-1; i++) {\r\n\t\t\t\t\tlet id = i+'5x5'+props.updateSize\r\n\t\t\t\t\tif(i === index){\r\n\t\t\t\t\t\tdocument.getElementById(id).className = 'travel-li-s'\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdocument.getElementById(id).className = 'travel-li'\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tbreak\r\n\t\t}\r\n\t\tprops.jumpTo(index)\r\n\t}\r\n\r\n\t\r\n\r\n\t// useEffect(() => {\r\n\t// \tconsole.log('Travel Mounted')\r\n\t// \tconsole.log(props.history1)\r\n\t// \tconsole.log(props.history2)\r\n\t// \tconsole.log(props.history3)\r\n\r\n\t// }, [])\r\n\r\n\treturn (\r\n\t\t<div className='travel'>\r\n\t\t\t<p className='travel-title'>Time Machine</p>\r\n\t\t\t{/* 3X3 */}\r\n\t\t\t{props.updateSize === 3 && (\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{props.history1.map((arr, index) => {\r\n\t\t\t\t\t\treturn props.history1.length - 1 === index ? \r\n\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t: (\r\n\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\tkey={index + '3x3'+ props.updateSize}\r\n\t\t\t\t\t\t\tid={index + '3x3'+ props.updateSize}\r\n\t\t\t\t\t\t\tonClick={() => handleClick(index)}\r\n\t\t\t\t\t\t\tclassName='travel-li'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{index === 0 ? 'Start' : `Go To Step ${index}`}\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t</ul>\r\n\t\t\t)}\r\n\t\t\t{/* 4X4 */}\r\n\t\t\t{props.updateSize === 4 && (\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{props.history2.map((arr, index) => {\r\n\t\t\t\t\t\treturn props.history2.length - 1 === index ? null : (\r\n\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\tkey={index + '4x4'+ props.updateSize}\r\n\t\t\t\t\t\t\tid={index + '4x4'+ props.updateSize}\r\n\t\t\t\t\t\t\tonClick={() => handleClick(index)}\r\n\t\t\t\t\t\t\tclassName='travel-li'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{index === 0 ? 'Start' : `Go To Step ${index}`}\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t</ul>\r\n\t\t\t)}\r\n\t\t\t{/* 5X5 */}\r\n\t\t\t{props.updateSize === 5 && (\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{props.history3.map((arr, index) => {\r\n\t\t\t\t\t\treturn props.history3.length - 1 === index ? null : (\r\n\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\tkey={index + '5x5'+ props.updateSize}\r\n\t\t\t\t\t\t\tid={index + '5x5'+ props.updateSize}\r\n\t\t\t\t\t\t\tonClick={() => handleClick(index)}\r\n\t\t\t\t\t\t\tclassName='travel-li'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{index === 0 ? 'Start' : `Go To Step ${index}`}\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t</ul>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport Board from './board/Board'\r\nimport Travel from './travel/Travel'\r\nimport './css/container.style.min.css'\r\n\r\nexport default function Container(props) {\r\n\treturn (\r\n\t\t<div className='container'>\r\n\t\t\t<div className='container-board'>\r\n\t\t\t\t<Board\r\n\t\t\t\t\tstate={props.state}\r\n\t\t\t\t\tsetState={props.setState}\r\n\t\t\t\t\thandleChange={props.handleChange}\r\n\t\t\t\t\tsize={props.size}\r\n\t\t\t\t\tupdateSize={props.updateSize}\r\n\t\t\t\t\tsetupdateSize={props.setupdateSize}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className='container-travel'>\r\n\t\t\t\t<Travel history1={props.state.boards1} history2={props.state.boards2} history3={props.state.boards3} jumpTo={props.jumpTo} updateSize={props.updateSize} setupdateSize={props.setupdateSize} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","export default function checkpossibilities(boardArray, updateSize) {\r\n\t\t\t\r\n    //[1,2,3,4,5,6,7,8,9]\r\n    var blockStart = 0\r\n    var blockEnd = updateSize\r\n    let lastPosition = []\r\n\r\n    let test = false\r\n\r\n    let lignes = []\r\n    let colonnes = []\r\n    let diags = []\r\n    //For each lines\r\n    for (let i = 0; i < updateSize; i++) {\r\n        lastPosition = []\r\n        //For each buttons\r\n        for (let j = blockStart; j < blockEnd; j++) {\r\n            // console.log(boardArray[j])\r\n            \r\n            \r\n            if(boardArray[j] === null){\r\n                test = true\r\n            } else {\r\n                lastPosition.push(boardArray[j])\r\n                if(lastPosition.length > 1){\r\n                    if(lastPosition[0] === boardArray[j]){\r\n                        test = true\r\n                    }else {\r\n                        test = false\r\n                    }\r\n                } else {\r\n                    //Si c est la 1ere valeur sur la lignes\r\n                    test = true\r\n                }\r\n            }\r\n            \r\n            // console.log(test)\r\n            if(!test){\r\n            // \t//Si le test est false on arrete car on sait que 2valeurs diff sont présentes sur la lignes\r\n                break\r\n                //[false, true, true]\r\n            }\r\n\r\n        }\r\n        \r\n        //car Les 3 première fois on est sur la 1ere ligne\r\n        lignes.push(test)\r\n        \r\n        blockStart += updateSize\r\n        blockEnd += updateSize\r\n    }\r\n\r\n    //[false, true, true]\r\n    //Test si les 3 lignes sont a true\r\n    let testLignes = 0\r\n    for (let i = 0; i < lignes.length; i++) {\r\n        if(!lignes[i]){\r\n            testLignes++\r\n        }\r\n    }\r\n    if(testLignes === updateSize){\r\n        //On sait que plus de possibilité sur aucune lignes\r\n    }\r\n    // console.log(lignes)\r\n    // console.log(testLignes)\r\n    \r\n    \r\n\r\n    //Ensuite checker pour les colonnes\r\n    // return ligne\r\n\r\n    blockStart = 0\r\n    blockEnd = updateSize * updateSize - 2\r\n    test = false\r\n    //[1,2,3,4,5,6,7,8,9]\r\n    //[1,2,3,4, 5,6,7,8,  9,10,11,12,   13,14,15,16]\r\n\r\n    //For each columns\r\n    for (let i = 0; i < updateSize; i++) {\r\n        lastPosition = []\r\n        //For each buttons\r\n        for (let j = blockStart; j < blockEnd; j += updateSize) {\r\n            // console.log(boardArray[j])\r\n            \r\n            \r\n            if(boardArray[j] === null){\r\n                test = true\r\n            } else {\r\n                lastPosition.push(boardArray[j])\r\n                if(lastPosition.length > 1){\r\n                    if(lastPosition[0] === boardArray[j]){\r\n                        test = true\r\n                    }else {\r\n                        test = false\r\n                    }\r\n                } else {\r\n                    //Si c est la 1ere valeur sur la ligne\r\n                    test = true\r\n                }\r\n            }\r\n            \r\n            // console.log(test)\r\n            if(!test){\r\n            // \t//Si le test est false on arrete car on sait que 2valeurs diff sont présentes sur la ligne\r\n                break\r\n                //[false, true, true]\r\n            }\r\n            \r\n        }\r\n\r\n        //car Les 3 première fois on est sur la 1ere colonne\r\n        colonnes.push(test)\r\n        \r\n        blockStart += 1\r\n        blockEnd += 1\r\n    }\r\n\r\n    \r\n    //[false, true, true]\r\n    //Test si les 3 colonnes sont a true\r\n    let testColonnes = 0\r\n    for (let i = 0; i < colonnes.length; i++) {\r\n        if(!colonnes[i]){\r\n            testColonnes++\r\n        }\r\n    }\r\n    if(testColonnes === updateSize){\r\n        //On sait que plus de possibilité sur aucune colonnes\r\n    }\r\n    // console.log(colonnes)\r\n    // console.log(testColonnes)\r\n\r\n\r\n    blockStart = 0\r\n    blockEnd = updateSize * updateSize\r\n    let increment = updateSize + 1\r\n    test = false\r\n    // //[1,2,3,4,5,6,7,8,9]\r\n    // //[0,4,8]\r\n    // //[6,4,2]\r\n    // //[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]\r\n    // //[0,4,8]\r\n    // //[6,4,2]\r\n    // //For each diags\r\n    for (let i = 0; i < 2; i++) {\r\n        lastPosition = []\r\n        for (let j = blockStart; j < blockEnd; j += increment) {\r\n            // console.log(boardArray[j])\r\n            \r\n            \r\n            if(boardArray[j] === null){\r\n                test = true\r\n            } else {\r\n                lastPosition.push(boardArray[j])\r\n                if(lastPosition.length > 1){\r\n                    if(lastPosition[0] === boardArray[j]){\r\n                        test = true\r\n                    }else {\r\n                        test = false\r\n                    }\r\n                } else {\r\n                    //Si c est la 1ere valeur sur la ligne\r\n                    test = true\r\n                }\r\n            }\r\n            \r\n            // console.log(test)\r\n            if(!test){\r\n            // \t//Si le test est false on arrete car on sait que 2valeurs diff sont présentes sur la ligne\r\n                break\r\n                //[false, true, true]\r\n            }\r\n            \r\n            \r\n        }\r\n        \r\n        diags.push(test)\r\n\r\n        blockStart = updateSize - 1\r\n        blockEnd = updateSize * updateSize - 2\r\n        increment = updateSize - 1 //0 4 8 2 4 6, or 3,6,9,12\r\n    }\r\n\r\n    //[false, true, true]\r\n    //Test si les 3 colonnes sont a true\r\n    let testDiags = 0\r\n    for (let i = 0; i < diags.length; i++) {\r\n        if(!diags[i]){\r\n            testDiags++\r\n        }\r\n    }\r\n    if(testDiags === 2){\r\n        //On sait que plus de possibilité sur aucune diags\r\n    }\r\n    // console.log(diags)\r\n    // console.log(testDiags)\r\n\r\n    //Les 3 checks\r\n    if(testLignes === updateSize && testColonnes === updateSize && testDiags === 2){\r\n        return false\r\n    } else {\r\n        return true\r\n    }\r\n\r\n}","export default function checkWinner(boardArray, updateSize) {\r\n\t\t\t\r\n    //[1,2,3,4,5,6,7,8,9]\r\n    let testX = 0\r\n    let testO = 0\r\n    var blockStart = 0\r\n    var blockEnd = updateSize\r\n    let lastPosition = []\r\n\r\n\r\n    \r\n\r\n    //For each lines\r\n    for (let i = 0; i < updateSize; i++) {\r\n        lastPosition = []\r\n        //For each buttons\r\n        for (let j = blockStart; j < blockEnd; j++) {\r\n            if (boardArray[j] === 'X') {\r\n                testX += 1\r\n            } else if (boardArray[j] === 'O') {\r\n                testO += 1\r\n            }\r\n            lastPosition.push(j)\r\n        }\r\n        if (testX === updateSize || testO === updateSize) {\r\n            return lastPosition\r\n        }\r\n\r\n        testX = 0\r\n        testO = 0\r\n        blockStart += updateSize\r\n        blockEnd += updateSize\r\n    }\r\n\r\n    testX = 0\r\n    testO = 0\r\n    blockStart = 0\r\n    blockEnd = updateSize * updateSize - 2\r\n\r\n    //[1,2,3,4,5,6,7,8,9]\r\n    //[1,2,3,4, 5,6,7,8,  9,10,11,12,   13,14,15,16]\r\n\r\n    //For each columns\r\n    for (let i = 0; i < updateSize; i++) {\r\n        lastPosition = []\r\n        //For each buttons\r\n        for (let j = blockStart; j < blockEnd; j += updateSize) {\r\n            // console.log(j)\r\n            if (boardArray[j] === 'X') {\r\n                testX += 1\r\n            } else if (boardArray[j] === 'O') {\r\n                testO += 1\r\n            }\r\n            lastPosition.push(j)\r\n        }\r\n        if (testX === updateSize || testO === updateSize) {\r\n            return lastPosition\r\n        }\r\n\r\n        testX = 0\r\n        testO = 0\r\n        blockStart += 1\r\n        blockEnd += 1\r\n    }\r\n\r\n    testX = 0\r\n    testO = 0\r\n    blockStart = 0\r\n    blockEnd = updateSize * updateSize\r\n    let increment = updateSize + 1\r\n    //[1,2,3,4,5,6,7,8,9]\r\n    //[0,4,8]\r\n    //[6,4,2]\r\n    //[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]\r\n    //[0,4,8]\r\n    //[6,4,2]\r\n    //For each diags\r\n    for (let index = 0; index < 2; index++) {\r\n        lastPosition = []\r\n        for (let i = blockStart; i < blockEnd; i += increment) {\r\n            // console.log(i)\r\n            if (boardArray[i] === 'X') {\r\n                testX += 1\r\n            } else if (boardArray[i] === 'O') {\r\n                testO += 1\r\n            }\r\n            lastPosition.push(i)\r\n        }\r\n        if (testX === updateSize || testO === updateSize) {\r\n            return lastPosition\r\n        }\r\n\r\n        testX = 0\r\n        testO = 0\r\n        blockStart = updateSize - 1\r\n        blockEnd = updateSize * updateSize - 2\r\n        increment = updateSize - 1 //2 4 6, or 3,6,9,12\r\n    }\r\n\r\n}","import React, { useState } from 'react'\nimport './css/app.style.min.css'\nimport Container from './components/container/Container'\nimport checkpossibilities from './checkpossibilities'\nimport checkWinner from './checkwinner'\n\nfunction App() {\n\tlet size = 3\n\tconst [state, setState] = useState({\n\t\tboards1: [\n\t\t\t{\n\t\t\t\tboard: Array(size * size).fill(null),\n\t\t\t},\n\t\t],\n\t\tboards2: [\n\t\t\t{\n\t\t\t\tboard: Array((size + 1) * (size + 1)).fill(null),\n\t\t\t},\n\t\t],\n\t\tboards3: [\n\t\t\t{\n\t\t\t\tboard: Array((size + 2) * (size + 2)).fill(null),\n\t\t\t},\n\t\t],\n\t\tboards4: [\n\t\t\t{\n\t\t\t\tboard: [Array((size) * (size)).fill(null),Array((size) * (size)).fill(null),Array((size) * (size)).fill(null),]\n\t\t\t},\n\t\t],\n\t\tisX1: true,\n\t\tisX2: true,\n\t\tisX3: true,\n\t\tisX4: true,\n\t\tisFinished1: false,\n\t\tisFinished2: false,\n\t\tisFinished3: false,\n\t\tisFinished4: false,\n\t\tstepNumber1: 0,\n\t\tstepNumber2: 0,\n\t\tstepNumber3: 0,\n\t\tstepNumber4: 0,\n\t\tboardCopy1: Array(size * size).fill(null),\n\t\tboardCopy2: Array((size + 1) * (size + 1)).fill(null),\n\t\tboardCopy3: Array((size + 2) * (size + 2)).fill(null),\n\t\tboardCopy4: [Array((size) * (size)).fill(null),Array((size) * (size)).fill(null),Array((size) * (size)).fill(null),],\n\t\tlastPosition1: [],\n\t\tlastPosition2: [],\n\t\tlastPosition3: [],\n\t\tlastPosition4: [],\n\t\tisNotDraw1: true, \n\t\tisNotDraw2: true,\n\t\tisNotDraw3: true,\n\t\tisNotDraw4: true,\n\t\tis3d: false\n\n\t})\n\n\t//Set the selected size on menu\n\tconst [updateSize, setupdateSize] = useState(size)\n\n\tReact.useEffect(() => {\n\t\tconsole.log('IN USEEFFECT')\n\t\n\t\t\n\t\tlet boardsCopy = []\n\t\tlet currentFBoard = []\n\t\tlet lastPosition = []\n\t\tlet possibilities = true\n\t\tswitch (updateSize) {\n\t\t\tcase 3:\n\t\t\t\tif(!state.is3d){\n\t\t\t\t// console.log('///state.boards1///')\n\t\t\t\t// console.log(state.boards1.length)\n\t\t\t\t// console.log('///stepNumber1///')\n\t\t\t\t// console.log(state.stepNumber1)\n\t\t\t\t//Timetravel and navigating through different sizes causes\n\t\t\t\t//the block to be gold even if not in last position\n\t\t\t\tif(state.boards1.length-1 === state.stepNumber1){\n\t\t\t\t\t\n\t\t\t\tboardsCopy = state.boards1.slice()\n\t\t\t\tcurrentFBoard = boardsCopy[boardsCopy.length - 1]\n\t\t\t\tpossibilities = checkpossibilities(currentFBoard.board, updateSize)\n\t\t\t\tconsole.log('on est dans cas 3 et le test est: '+possibilities)\n\t\t\t\t\n\t\t\t\tlastPosition = checkWinner(currentFBoard.board, updateSize)\n\t\t\t\t// console.log(lastPosition)\n\t\t\t\tif (lastPosition) {\n\t\t\t\t\tsetState((prev) => ({\n\t\t\t\t\t\t...prev,\n\t\t\t\t\t\tisFinished1: true,\n\t\t\t\t\t\tlastPosition1: lastPosition,\n\t\t\t\t\t}))\n\t\t\t\t}\n\t\t\t\tif (!possibilities) {\n\t\t\t\t\tsetState((prev) => ({\n\t\t\t\t\t\t...prev,\n\t\t\t\t\t\tisNotDraw1: possibilities,\n\t\t\t\t\t\tisFinished1: true,\n\t\t\t\t\t}))\n\t\t\t\t}\n\t\t\t}\n\t\t\t}else {\n\t\t\t\tconsole.log('hello 3D checks L103')\n\t\t\t\t//Cas 3D\n\t\t\t}\n\t\t\t\tbreak\n\t\t\tcase 4:\n\t\t\t\t// console.log('///state.boards2///')\n\t\t\t\t// console.log(state.boards2.length)\n\t\t\t\t// console.log('///stepNumber2///')\n\t\t\t\t// console.log(state.stepNumber2)\n\n\t\t\t\tif(state.boards2.length-1 === state.stepNumber2){\n\t\t\t\tboardsCopy = state.boards2.slice()\n\t\t\t\tcurrentFBoard = boardsCopy[boardsCopy.length - 1]\n\t\t\t\tpossibilities = checkpossibilities(currentFBoard.board, updateSize)\n\t\t\t\t// console.log('on est dans cas 4 et le test est: '+possibilities)\n\t\t\t\tlastPosition = checkWinner(currentFBoard.board, updateSize)\n\t\t\t\t// console.log(lastPosition)\n\t\t\t\tif (lastPosition) {\n\t\t\t\t\tsetState((prev) => ({\n\t\t\t\t\t\t...prev,\n\t\t\t\t\t\tisFinished2: true,\n\t\t\t\t\t\tlastPosition2: lastPosition,\n\t\t\t\t\t}))\n\t\t\t\t}\n\t\t\t\tif (!possibilities) {\n\t\t\t\t\tsetState((prev) => ({\n\t\t\t\t\t\t...prev,\n\t\t\t\t\t\tisNotDraw2: possibilities,\n\t\t\t\t\t\tisFinished2: true,\n\t\t\t\t\t}))\n\t\t\t\t}\n\t\t\t}\n\t\t\t\tbreak\n\t\t\tcase 5:\n\t\t\t\t// console.log('///state.boards3///')\n\t\t\t\t// console.log(state.boards3.length)\n\t\t\t\t// console.log('///stepNumber3///')\n\t\t\t\t// console.log(state.stepNumber3)\n\n\t\t\t\tif(state.boards3.length-1 === state.stepNumber3){\n\t\t\t\tboardsCopy = state.boards3.slice()\n\t\t\t\tcurrentFBoard = boardsCopy[boardsCopy.length - 1]\n\t\t\t\tpossibilities = checkpossibilities(currentFBoard.board, updateSize)\n\t\t\t\t// console.log('on est dans cas 5 et le test est: '+possibilities)\n\t\t\t\tlastPosition = checkWinner(currentFBoard.board, updateSize)\n\t\t\t\tif (lastPosition) {\n\t\t\t\t\tsetState((prev) => ({\n\t\t\t\t\t\t...prev,\n\t\t\t\t\t\tisFinished3: true,\n\t\t\t\t\t\tlastPosition3: lastPosition,\n\t\t\t\t\t}))\n\t\t\t\t}\n\t\t\t\tif (!possibilities) {\n\t\t\t\t\tsetState((prev) => ({\n\t\t\t\t\t\t...prev,\n\t\t\t\t\t\tisNotDraw3: possibilities,\n\t\t\t\t\t\tisFinished3: true,\n\t\t\t\t\t}))\n\t\t\t\t}\n\t\t\t}\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tbreak\n\t\t}\n\t\n\t}, [state.boards1, state.boards2, state.boards3, updateSize, size, setState,state.stepNumber1, state.stepNumber2, state.stepNumber3])\n\n\t//travel component change\n\tconst jumpTo = (i) => {\n\t\tlet boardsCopy = []\n\t\tlet currentFBoard = []\n\t\tlet currentFBoardCopy = []\n\t\t// console.log('lastposition')\n\t\t// console.log(state.lastPosition1)\n\t\t// console.log(state.lastPosition2)\n\t\t// console.log(state.lastPosition3)\n\t\t// console.log(updateSize)\n\t\t\n\t\tswitch (updateSize) {\n\t\t\tcase 3:\n\t\t\t\tif(!state.is3d){\n\t\t\t\tboardsCopy = state.boards1.slice()\n\t\t\t\t// // //Copie le dernier board du boards\n\t\t\t\tcurrentFBoard = boardsCopy[i]\n\t\t\t\t// console.log(currentFBoard)\n\t\t\t\tcurrentFBoardCopy = currentFBoard.board.slice()\n\n\t\t\t\tsetState((prev) => ({\n\t\t\t\t\t...prev,\n\t\t\t\t\tstepNumber1: i,\n\t\t\t\t\tisX1: i % 2 === 0,\n\t\t\t\t\tboardCopy1: currentFBoardCopy.slice(),\n\t\t\t\t\tlastPosition1: [],\n\t\t\t\t\tisNotDraw1: true,\n\t\t\t\t\tisFinished1: false,\n\t\t\t\t}))\n\t\t\t}else {\n\t\t\t\tconsole.log('hello 3D jumps L200')\n\t\t\t\t//Cas 3D\n\t\t\t}\n\t\t\t\tbreak\n\t\t\tcase 4:\n\t\t\t\tboardsCopy = state.boards2.slice()\n\t\t\t\t// // //Copie le dernier board du boards\n\t\t\t\tcurrentFBoard = boardsCopy[i]\n\t\t\t\t// console.log(currentFBoard)\n\t\t\t\tcurrentFBoardCopy = currentFBoard.board.slice()\n\n\t\t\t\tsetState((prev) => ({\n\t\t\t\t\t...prev,\n\t\t\t\t\tstepNumber2: i,\n\t\t\t\t\tisX2: i % 2 === 0,\n\t\t\t\t\tboardCopy2: currentFBoardCopy.slice(),\n\t\t\t\t\tlastPosition2: [],\n\t\t\t\t\tisNotDraw2: true,\n\t\t\t\t\tisFinished2: false,\n\t\t\t\t}))\n\t\t\t\tbreak\n\t\t\tcase 5:\n\t\t\t\tboardsCopy = state.boards3.slice()\n\t\t\t\t// // //Copie le dernier board du boards\n\t\t\t\tcurrentFBoard = boardsCopy[i]\n\t\t\t\t// console.log(currentFBoard)\n\t\t\t\tcurrentFBoardCopy = currentFBoard.board.slice()\n\n\t\t\t\tsetState((prev) => ({\n\t\t\t\t\t...prev,\n\t\t\t\t\tstepNumber3: i,\n\t\t\t\t\tisX3: i % 2 === 0,\n\t\t\t\t\tboardCopy3: currentFBoardCopy.slice(),\n\t\t\t\t\tlastPosition3: [],\n\t\t\t\t\tisNotDraw3: true,\n\t\t\t\t\tisFinished3: false,\n\t\t\t\t}))\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tbreak\n\t\t}\n\n\t\t// console.log(currentFBoardCopy)\n\t\t// console.log(state.stepNumber1)\n\t\t// console.log(state.isX1)\n\t\t// console.log(state.boards1)\n\t}\n\n\t//Handle button change\n\tconst handleChange = (index) => {\n\t\t// //Copie tout le boards\n\t\tlet boardsCopy = []\n\t\tlet currentFBoard = []\n\t\tlet currentFBoardCopy = []\n\t\tlet value = ''\n\t\tswitch (updateSize) {\n\t\t\tcase 3:\n\t\t\t\tif(!state.is3d){\n\t\t\t\tconsole.log('cas 1')\n\n\t\t\t\tboardsCopy = state.boards1.slice(0, state.stepNumber1 + 1)\n\t\t\t\tcurrentFBoard = boardsCopy[boardsCopy.length - 1]\n\t\t\t\tcurrentFBoardCopy = currentFBoard.board.slice()\n\t\t\t\tif (state.isFinished1 || currentFBoardCopy[index]) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tvalue = state.isX1 ? 'X' : 'O'\n\t\t\t\tcurrentFBoardCopy[index] = value\n\t\t\t\tsetState((currentCount) => ({\n\t\t\t\t\t...currentCount,\n\t\t\t\t\tboards1: boardsCopy.concat([\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tboard: currentFBoardCopy,\n\t\t\t\t\t\t},\n\t\t\t\t\t]),\n\t\t\t\t\tisX1: !currentCount.isX1,\n\t\t\t\t\tstepNumber1: boardsCopy.length,\n\t\t\t\t\tboardCopy1: currentFBoardCopy.slice(),\n\t\t\t\t}))\n\t\t\t}else {\n\t\t\t\t\tconsole.log('hello 3D changes L280')\n\t\t\t\t\t//Cas 3D\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\tcase 4:\n\t\t\t\tconsole.log('cas 2')\n\t\t\t\tboardsCopy = state.boards2.slice(0, state.stepNumber2 + 1)\n\t\t\t\tcurrentFBoard = boardsCopy[boardsCopy.length - 1]\n\t\t\t\tcurrentFBoardCopy = currentFBoard.board.slice()\n\t\t\t\tif (state.isFinished2 || currentFBoardCopy[index]) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tvalue = state.isX2 ? 'X' : 'O'\n\t\t\t\tcurrentFBoardCopy[index] = value\n\t\t\t\tsetState((currentCount) => ({\n\t\t\t\t\t...currentCount,\n\t\t\t\t\tboards2: boardsCopy.concat([\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tboard: currentFBoardCopy,\n\t\t\t\t\t\t},\n\t\t\t\t\t]),\n\t\t\t\t\tisX2: !currentCount.isX2,\n\t\t\t\t\tstepNumber2: boardsCopy.length,\n\t\t\t\t\tboardCopy2: currentFBoardCopy.slice(),\n\t\t\t\t}))\n\t\t\t\tbreak\n\t\t\tcase 5:\n\t\t\t\tconsole.log('cas 3')\n\t\t\t\tboardsCopy = state.boards3.slice(0, state.stepNumber3 + 1)\n\t\t\t\tcurrentFBoard = boardsCopy[boardsCopy.length - 1]\n\t\t\t\tcurrentFBoardCopy = currentFBoard.board.slice()\n\t\t\t\tif (state.isFinished3 || currentFBoardCopy[index]) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tvalue = state.isX3 ? 'X' : 'O'\n\t\t\t\tcurrentFBoardCopy[index] = value\n\t\t\t\tsetState((currentCount) => ({\n\t\t\t\t\t...currentCount,\n\t\t\t\t\tboards3: boardsCopy.concat([\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tboard: currentFBoardCopy,\n\t\t\t\t\t\t},\n\t\t\t\t\t]),\n\t\t\t\t\tisX3: !currentCount.isX3,\n\t\t\t\t\tstepNumber3: boardsCopy.length,\n\t\t\t\t\tboardCopy3: currentFBoardCopy.slice(),\n\t\t\t\t}))\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tbreak\n\t\t}\n\t\t// console.log(currentFBoardCopy)\n\t\t// console.log(state.stepNumber1)\n\t\t// console.log(state.isX1)\n\t\t// console.log(state.boards1)\n\t}\n\n\treturn (\n\t\t<div className='app'>\n\t\t\t<Container\n\t\t\t\tstate={state}\n\t\t\t\tsetState={setState}\n\t\t\t\thandleChange={handleChange}\n\t\t\t\tjumpTo={jumpTo}\n\t\t\t\tsize={size}\n\t\t\t\tupdateSize={updateSize}\n\t\t\t\tsetupdateSize={setupdateSize}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n"],"sourceRoot":""}